// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.155.1/containers/docker-from-docker
{
  "name": "{{name}}",
  "dockerFile": "Dockerfile",
  "build": {
    "args": { "--no-cache": "" }
  },
  "runArgs": [
    "--init",
    "-e DISPLAY=$((Get-NetIPAddress -InterfaceAlias 'vEthernet (WSL)' -AddressFamily IPv4).IPAddress+':0.0')"
  ],
  "mounts": [
    "source=/var/run/docker.sock,target=/var/run/docker-host.sock,type=bind",
    "source=${localEnv:HOME}${localEnv:APPDATA}/.nanome_lib,target=/root/.nanome_lib,type=bind,consistency=cached"
  ],
  "overrideCommand": false,

  // Use this environment variable if you need to bind mount your local source code into a new container.
  "remoteEnv": {
    "LOCAL_WORKSPACE_FOLDER": "${localWorkspaceFolder}"
  },

  // Set *default* container specific settings.json values on container create.
  "settings": {
    "terminal.integrated.shell.linux": "/bin/bash"
  },

  // Add the IDs of extensions you want installed when the container is created.
  "extensions": [
    "ms-azuretools.vscode-docker",
    "spadin.remote-x11",
    "ms-python.python",
    "ms-python.vscode-pylance",
    "ms-vscode-remote.vscode-remote-extensionpack",
    "ms-vsliveshare.vsliveshare"
  ]

  // Use 'forwardPorts' to make a list of ports inside the container available locally.
  // "forwardPorts": [],

  // Use 'postCreateCommand' to run commands after the container is created.
  // "postCreateCommand": "docker --version",

  // Comment out connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
  // "remoteUser": "vscode"
}
